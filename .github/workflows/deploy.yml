name: Deploy to Google Cloud

on:
  push:
    branches: [ main, develop ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Install Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.9.5" 

      # Authenticate to GCP
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT }}

      # Configure gcloud
      - uses: google-github-actions/setup-gcloud@v1


      - name: Enable Required APIs
        run: |
            gcloud services enable \
            bigquerydatatransfer.googleapis.com \
            monitoring.googleapis.com \
            run.googleapis.com

        # Build and push Docker image FIRST
      - name: Build and Push API Image
        run: |
          gcloud builds submit ./api \
            --tag gcr.io/${{ secrets.GCP_PROJECT }}/data-api:latest \
            --project ${{ secrets.GCP_PROJECT }}
            

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: ./infra
        env:
          TF_VAR_redshift_password: ${{ secrets.REDSHIFT_PASSWORD }}
          TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT }}


      # Apply Terraform changes
      - name: Terraform Plan
        run: terraform plan
        working-directory: ./infra
        env:
          TF_VAR_redshift_password: ${{ secrets.REDSHIFT_PASSWORD }}
          TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT }}


      # Apply Terraform changes
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./infra
        env:
          TF_VAR_redshift_password: ${{ secrets.REDSHIFT_PASSWORD }}
          TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT }}

      # Build and deploy API
      - name: Build and Deploy API
        run: |-
          gcloud builds submit ./api \
            --tag gcr.io/${{ secrets.GCP_PROJECT }}/data-api \
          && gcloud run deploy data-api \
            --image gcr.io/${{ secrets.GCP_PROJECT }}/data-api \
            --platform managed \
            --region us-central1 \
            --allow-unauthenticated