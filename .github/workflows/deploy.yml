name: Deploy to Google Cloud

on:
  push:
    branches: [ main, improvedversion ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Install Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "1.9.5" 

      # Authenticate to GCP
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ secrets.GCP_PROJECT }}
          scopes: "https://www.googleapis.com/auth/cloud-platform"


      # Configure gcloud
      - uses: google-github-actions/setup-gcloud@v1


      - name: Enable Required APIs
        run: |
            gcloud services enable \
            artifactregistry.googleapis.com \
            bigquerydatatransfer.googleapis.com \
            monitoring.googleapis.com \
            run.googleapis.com \
            cloudbuild.googleapis.com \
            cloudresourcemanager.googleapis.com \
            pubsub.googleapis.com \
            bigquery.googleapis.com \
            iam.googleapis.com

     # 1. FIRST build and push the Docker image
      - name: Build and Push Image
        run: |
            cd api
            gcloud builds submit \
            --tag gcr.io/${{ secrets.GCP_PROJECT }}/data-api:latest \
            --project ${{ secrets.GCP_PROJECT }}

      # Initialize Terraform
      - name: Terraform Init
        run: terraform init
        working-directory: ./infra
        env:
          TF_VAR_redshift_password: ${{ secrets.REDSHIFT_PASSWORD }}
          TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT }}


      # Apply Terraform changes
      - name: Terraform Plan
        run: terraform plan
        working-directory: ./infra
        env:
          TF_VAR_redshift_password: ${{ secrets.REDSHIFT_PASSWORD }}
          TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT }}


      # Apply Terraform changes
      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./infra
        env:
          TF_VAR_redshift_password: ${{ secrets.REDSHIFT_PASSWORD }}
          TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT }}


       # Obtener la URL de la API
      - name: Get API URL
        id: get-url
        run: |
          # Definir la región directamente
          REGION="us-central1"
          API_URL=$(gcloud run services describe data-api --platform managed --region $REGION --format="value(status.url)")
          echo "API_URL=$API_URL" >> $GITHUB_ENV
      
      # Instalar dependencias para las pruebas
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests google-cloud-bigquery pandas pytest
      
      # Ejecutar pruebas de integración
      - name: Run Integration Tests
        run: |
          python -m pytest tests/test_api_integration.py -v
        env:
          API_URL: ${{ env.API_URL }}
          GOOGLE_CLOUD_PROJECT: ${{ secrets.GCP_PROJECT }}

      - name: Wait for X minutes
        run: sleep 300

      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ./infra
        env:
          GOOGLE_CLOUD_KEYFILE_JSON: ${{ secrets.GCP_CREDENTIALS }}
          TF_VAR_redshift_password: ${{ secrets.REDSHIFT_PASSWORD }}
          TF_VAR_gcp_project: ${{ secrets.GCP_PROJECT }}